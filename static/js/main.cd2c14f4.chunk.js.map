{"version":3,"sources":["features/feature1-auth/Login/Login.module.css","main/ui/header/Header.module.css","main/ui/common/HW4.module.css","features/feature1-auth/Password-recovery/PasswordRecovery.module.css","features/feature1-auth/Password-recovery/new-password/NewPassword.module.css","main/ui/common/c1-SuperInputText/SuperInputText.module.css","features/feature1-auth/Password-recovery/check-email/CheckEmail.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","features/feature1-auth/Error404/Error404.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c2-SuperButton/SuperButton.tsx","main/dal/auth-api.ts","features/feature1-auth/Login/login-reduser.ts","features/feature1-auth/Login/Login.tsx","main/ui/common/HW4.tsx","main/ui/api/api.ts","main/ui/api/apiRecoveryPassword/apiRecoveryPassword.ts","features/feature1-auth/Password-recovery/password-recovery-reduser.ts","features/feature1-auth/Password-recovery/new-password/NewPassword.tsx","hooks/newPasswordHandler/newPasswordHandler.ts","features/feature1-auth/Password-recovery/PasswordRecovery.tsx","hooks/passwordRecoveryHandler/passwordRecoveryHandler.ts","main/ui/assets/img/icons/checkEmail.svg","features/feature1-auth/Password-recovery/check-email/CheckEmail.tsx","features/feature1-auth/Profile/Profile.tsx","features/feature1-auth/Register/register-reduser.ts","features/feature1-auth/Register/Register.tsx","main/ui/routes/Routes.tsx","main/ui/header/Header.tsx","main/ui/App.tsx","reportWebVitals.ts","features/feature1-auth/Profile/profile-reduser.ts","main/bll/store.ts","index.tsx","features/feature1-auth/Register/Register.module.css"],"names":["module","exports","Error404","className","styles","error","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","spanClassName","inputStyle","formName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","InputStyleClassName","inputWrapper","htmlFor","label","id","e","currentTarget","value","key","SuperButton","red","btn","color","fontColor","size","fontSize","onClick","btnFontColor","btnSize","btnFontSize","blueBtnClassName","blueButton","default","btnClassName","style","width","instance","axios","create","baseURL","withCredentials","authApi","email","password","post","rememberMe","AUTH_USER","SET_STATUS","ERROR_AUTH","EMPTY_STRING","initialState","avatar","created","isAdmin","name","publicCardPacksCount","updated","verified","_id","status","setStatusAuthUser","loginTC","dispatch","then","res","userData","data","catch","errorAuthUser","console","log","Login","useState","setEmail","setpassword","emailError","passwordError","useDispatch","authStatus","useSelector","state","login","to","PATH","PROFILE","ERROR","loginWrapper","loginWindow","logo","signIn","emailWrapper","testSpanError","passwordWrapper","forgotPasswordBtn","PASSWORD_RECOVERY","loginBtn","sendLoginRequest","signUpBtn","REGISTER","SuperComponents","text","setText","column","alert","apiServices","apiRecoveryPassword","from","message","resetPasswordToken","isSending","newPassword","setNewPassword","setSending","sendInstructions","sendNewPassword","token","NewPassword","passwordRecovery","useParams","navigate","useNavigate","action","thunk","newPasswordError","setNewPasswordError","length","useNewPasswordHandler","LOGIN","newPasswordWindow","createNewPassword","newPasswordWrapper","createNewPasswordBtn","PasswordRecovery","setEmailError","test","usePasswordRecoveryHandler","CHECK_EMAIL","passwordRecoveryWindow","forgotYourPassword","sendInstructionsBtn","tryLoginBtn","CheckEmail","checkEmail","checkEmailWindow","checkEmailWrapper","checkEmailImg","src","Profile","registerAPI","isSignUp","infoError","Register","setPassword","confirmPassword","setConfirmPassword","okSignUp","register","errorInfo","sendDataHandler","setEmailPasswordRegister","emailPasswordError","response","infoSMSError","passwordRegExp","sendRegisterDataTC","disabledBtn","registerWrapper","registerWindow","signUp","spanError","buttons","cancelBtn","registerBtn","disabled","NEW_PASSWORD","SUPER_COMPONENTS","Rout","path","element","Header","header","list","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd2c14f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__3D2aq\",\"loginWindow\":\"Login_loginWindow__2fxNF\",\"logo\":\"Login_logo__2R1R4\",\"signIn\":\"Login_signIn__3G4GT\",\"emailWrapper\":\"Login_emailWrapper__sFmKj\",\"passwordWrapper\":\"Login_passwordWrapper__1ksEn\",\"forgotPasswordBtn\":\"Login_forgotPasswordBtn__2TZ2F\",\"loginBtn\":\"Login_loginBtn__1WDJr\",\"signUpBtn\":\"Login_signUpBtn__1zfSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__L-xe5\",\"logo\":\"Header_logo__2mL4I\",\"list\":\"Header_list__154Ud\",\"item\":\"Header_item__2TvBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__hEISd\",\"column\":\"HW4_column__2ETDD\",\"testSpanError\":\"HW4_testSpanError__3SxyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery__2MeoB\",\"passwordRecoveryWindow\":\"PasswordRecovery_passwordRecoveryWindow__1Zc-0\",\"logo\":\"PasswordRecovery_logo__1PP_V\",\"forgotYourPassword\":\"PasswordRecovery_forgotYourPassword__1tn7L\",\"emailWrapper\":\"PasswordRecovery_emailWrapper__fCqxo\",\"passwordWrapper\":\"PasswordRecovery_passwordWrapper__195EO\",\"sendInstructionsBtn\":\"PasswordRecovery_sendInstructionsBtn__1SxTn\",\"tryLoginBtn\":\"PasswordRecovery_tryLoginBtn__216bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__3R1Q1\",\"newPasswordWindow\":\"NewPassword_newPasswordWindow__1Arrl\",\"logo\":\"NewPassword_logo__HdgLd\",\"createNewPassword\":\"NewPassword_createNewPassword__2fnrZ\",\"newPasswordWrapper\":\"NewPassword_newPasswordWrapper__PbUWQ\",\"createNewPasswordBtn\":\"NewPassword_createNewPasswordBtn__Cc8nk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"SuperInputText_inputWrapper__1W0gk\",\"errorInput\":\"SuperInputText_errorInput__3CDda\",\"error\":\"SuperInputText_error__2NHBR\",\"label\":\"SuperInputText_label__231l0\",\"inputStyle\":\"SuperInputText_inputStyle__3MGA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmail\":\"CheckEmail_checkEmail__3RAyk\",\"checkEmailWindow\":\"CheckEmail_checkEmailWindow__FCv_F\",\"logo\":\"CheckEmail_logo__17UAD\",\"checkEmailWrapper\":\"CheckEmail_checkEmailWrapper__36O2Y\",\"checkEmailImg\":\"CheckEmail_checkEmailImg__2_N-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Hmrg\",\"btn\":\"SuperButton_btn__1hSq7\",\"blueButton\":\"SuperButton_blueButton__jkqN8\"};","import React from 'react';\nimport styles from './Error404.module.css'\n\n\nexport function Error404() {\n  return (\n    <div className={styles.error}>\n      Error!\n    </div>\n  );\n}\n\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    inputStyle?: boolean\r\n    formName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, inputStyle,\r\n        formName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className}`\r\n    const InputStyleClassName = inputStyle ? s.inputStyle : ''\r\n    return (\r\n        <div className={s.inputWrapper}>\r\n            {error\r\n                ? <label className={finalSpanClassName} htmlFor={type}>{error}</label>\r\n                : <label className={s.label} htmlFor={type}>{formName}</label>\r\n            }\r\n            <input\r\n                id={type}\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={`${finalInputClassName} ${InputStyleClassName}`}\r\n                {...restProps}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, MouseEvent} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    btn?: boolean\r\n    color?: string\r\n    fontColor?: string\r\n    size?: string\r\n    fontSize?: string\r\n    onClick?: () => void\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className, btn,\r\n        color,fontColor,\r\n        size,fontSize,\r\n        onClick,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n    const onClickCallback = (e:MouseEvent<HTMLButtonElement>) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n    let btnFontColor = 'black'\r\n    let btnSize = '140px'\r\n    let btnFontSize = '14px'\r\n\r\n    if(fontColor) {\r\n        btnFontColor = fontColor\r\n    }\r\n\r\n    if(size) {\r\n        if (size === 'big') {\r\n            btnSize = '270px'\r\n        }\r\n        if (size === 'medium') {\r\n            btnSize = '185px'\r\n        }\r\n        if (size === 'small') {\r\n            btnSize = '125px'\r\n        }\r\n    }\r\n\r\n    if(fontSize) {\r\n        if (size === 'bigFont') {\r\n            btnFontSize = '16px'\r\n        }\r\n        if (size === 'mediumFont') {\r\n            btnFontSize = '14px'\r\n        }\r\n        if (size === 'smallFont') {\r\n            btnFontSize = '12px'\r\n        }\r\n    }\r\n\r\n    const blueBtnClassName = `${color === 'blue' ? s.blueButton : s.default} ${className}`\r\n    const btnClassName = `${btn ? s.btn : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            onClick={onClickCallback}\r\n            className={`${btnClassName} ${blueBtnClassName}`}\r\n            style={{ width: `${btnSize}`, fontSize: `${btnFontSize}`, color: `${btnFontColor}`}}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import axios, { AxiosResponse } from 'axios'\r\n\r\n/*https://neko-back.herokuapp.com/2.0*/\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authApi = {\r\n    loginUser(email: string, password: string) {\r\n        return instance.post<any, AxiosResponse<any>>('auth/login', {email, password, rememberMe: false})\r\n    }\r\n}\r\n\r\nexport type ResponseType = {\r\n    avatar?: string\r\n    created: Date\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: Date\r\n    verified: boolean;\r\n    _id: string\r\n    error?: string\r\n}","import {Dispatch} from \"react\";\r\nimport {authApi} from \"../../../main/dal/auth-api\";\r\n\r\n\r\nconst AUTH_USER = 'login/AUTH_USER'\r\nconst SET_STATUS = 'login/SET_STATUS'\r\nconst ERROR_AUTH = 'login/ERROR_AUTH'\r\n\r\nexport const IDLE = 'idle'\r\nexport const LOADING = 'loading'\r\nexport const SUCCEEDED = 'succeeded'\r\nexport const FAILED = 'failed'\r\n\r\nexport const EMPTY_STRING = ''\r\nexport const ZERO = 0\r\n\r\nexport type InitialStateType = {\r\n    avatar: string\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: string\r\n    verified: boolean\r\n    _id: string\r\n    error: string\r\n    status: RequestStatusType\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState: InitialStateType = {\r\n    avatar: EMPTY_STRING,\r\n    created: EMPTY_STRING,\r\n    email: EMPTY_STRING,\r\n    isAdmin: false,\r\n    name: EMPTY_STRING,\r\n    publicCardPacksCount: ZERO,\r\n    rememberMe: false,\r\n    updated: EMPTY_STRING,\r\n    verified: false,\r\n    _id: EMPTY_STRING,\r\n    error: EMPTY_STRING,\r\n    status: IDLE,\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case AUTH_USER: {\r\n            return {...state}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case ERROR_AUTH: {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const authUserRequest = (userData: InitialStateType) => ({type: AUTH_USER, userData} as const)\r\nexport const setStatusAuthUser = (status: RequestStatusType) => ({type: SET_STATUS, status} as const)\r\nexport const errorAuthUser = (error: string) => ({type: ERROR_AUTH, error} as const)\r\n\r\nexport const loginTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    authApi.loginUser(email, password)\r\n        .then(res => {\r\n            if (!res.data.error) {\r\n                dispatch(authUserRequest(res.data))\r\n                dispatch(setStatusAuthUser('succeeded'))\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(setStatusAuthUser('failed'))\r\n            dispatch(errorAuthUser(error.error))\r\n            console.log(error)\r\n        })\r\n}\r\n\r\nexport type ActionsType = ReturnType<typeof authUserRequest>\r\n    | ReturnType<typeof setStatusAuthUser>\r\n    | ReturnType<typeof errorAuthUser>","import React, {useState} from 'react';\r\nimport styles from './Login.module.css'\r\nimport s from \"../../../main/ui/common/HW4.module.css\";\r\nimport SuperInputText from \"../../../main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\r\nimport {EMPTY_STRING, FAILED, loginTC, RequestStatusType, SUCCEEDED} from \"./login-reduser\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/bll/store\";\r\nimport {PATH} from \"../../../main/ui/routes/Routes\";\r\nimport {Link, Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport function Login() {\r\n    const [email, setEmail] = useState<string>(EMPTY_STRING)\r\n    const [password, setpassword] = useState<string>(EMPTY_STRING)\r\n    const emailError = email ? EMPTY_STRING : 'email error'\r\n    const passwordError = password ? EMPTY_STRING : 'password error'\r\n\r\n    const dispatch = useDispatch()\r\n    const authStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.login.error)\r\n\r\n    function sendLoginRequest(email: string, password: string) {\r\n        dispatch(loginTC(email, password))\r\n    }\r\n\r\n    if (authStatus === SUCCEEDED) {\r\n        return <Navigate to={PATH.PROFILE}/>\r\n    }\r\n\r\n    if (authStatus === FAILED) {\r\n        return <Navigate to={PATH.ERROR}/>\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className={styles.loginWrapper}>\r\n                <div className={styles.loginWindow}>\r\n                    <h1 className={styles.logo}>It-incubator</h1>\r\n                    {error\r\n                        ? <h2 className={styles.signIn}>{error}</h2>\r\n                        : <h2 className={styles.signIn}>Sign In</h2>\r\n                    }\r\n                    <div className={styles.emailWrapper}>\r\n                        <SuperInputText\r\n                            formName={'Email'}\r\n                            type={'email'}\r\n                            value={email}\r\n                            onChangeText={setEmail}\r\n                            error={emailError}\r\n                            spanClassName={s.testSpanError}\r\n                            inputStyle\r\n                        />\r\n                    </div>\r\n                    <div className={styles.passwordWrapper}>\r\n                        <SuperInputText\r\n                            className={styles.password}\r\n                            formName={'Password'}\r\n                            type={'password'}\r\n                            value={password}\r\n                            onChangeText={setpassword}\r\n                            error={passwordError}\r\n                            spanClassName={s.testSpanError}\r\n                            inputStyle\r\n                        />\r\n                    </div>\r\n                    <div className={styles.forgotPasswordBtn}>\r\n                        <Link to={PATH.PASSWORD_RECOVERY}>\r\n                            <SuperButton\r\n                                fontSize={'medium'}\r\n                                size={'medium'}>\r\n                                Forgot password\r\n                            </SuperButton>\r\n                        </Link>\r\n                    </div>\r\n                    <div className={styles.loginBtn}>\r\n                        <SuperButton\r\n                            color={'blue'}\r\n                            fontColor={'white'}\r\n                            size={'big'}\r\n                            onClick={() => sendLoginRequest(email, password)}\r\n                            btn>\r\n                            Login\r\n                        </SuperButton>\r\n                    </div>\r\n                    <span>Don’t have an account?</span>\r\n                    <div className={styles.signUpBtn}>\r\n                        <Link to={PATH.REGISTER}>\r\n                            <SuperButton\r\n                                fontColor={'#21268F'}\r\n                                fontSize={'big'}\r\n                                size={'small'}\r\n                                btn>\r\n                                Sign Up\r\n                            </SuperButton>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport s from './HW4.module.css'\r\nimport SuperInputText from \"./c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from './c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from './c3-SuperCheckbox/SuperCheckbox';\r\n\r\n\r\nexport function SuperComponents() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    formName={'Email'}\r\n                    type={'email'}\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                    inputStyle\r\n                />\r\n\r\n               {/* <SuperInputText\r\n                    className={s.blue}\r\n                />\r\n\r\n\r\n                <SuperButton btn>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red\r\n                    btn\r\n                    onClick={showAlert}\r\n                >\r\n                    delete\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text\r\n                </SuperCheckbox>\r\n\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\nexport const apiServices = axios.create({\r\n    baseURL: `https://neko-back.herokuapp.com/2.0`,\r\n});","import {apiServices} from \"../api\";\r\n\r\nexport const apiRecoveryPassword = {\r\n    getInstructions(email: string) {\r\n        return apiServices.post(`auth/forgot`, {\r\n            email, from: \"Administrator <admin@gmail.com>\",\r\n            message: `<div><a href=\"https://neko-back.herokuapp.com/2.0/#/New-password/$token$\">Ссылка на востановление пароля<a/></div>`\r\n        })\r\n    },\r\n    sendNewPassword(resetPasswordToken: string, password: string) {\r\n        return apiServices.post(`auth/set-new-password`,\r\n            {resetPasswordToken, password})\r\n    }\r\n};","import {Dispatch} from \"react\";\r\nimport {apiRecoveryPassword} from \"../../../main/ui/api/apiRecoveryPassword/apiRecoveryPassword\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    isSending: false,\r\n    newPassword: '',\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASS-RECOVERY/SET_EMAIL\": {\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"PASS-RECOVERY/SET_NEW_PASSWORD\": {\r\n            return {...state, newPassword: action.newPassword}\r\n        }\r\n        case \"PASS-RECOVERY/SET_IS_SENDING\": {\r\n            return {...state, isSending: action.isSending}\r\n        }\r\n    }\r\n    return state\r\n}\r\n//actions\r\nexport const setEmail = (email: string) => ({\r\n    type: \"PASS-RECOVERY/SET_EMAIL\",\r\n    email\r\n} as const)\r\nexport const setNewPassword = (newPassword: string) => ({\r\n    type: \"PASS-RECOVERY/SET_NEW_PASSWORD\",\r\n    newPassword\r\n} as const)\r\nexport const setSending = (isSending: boolean) => ({\r\n    type: \"PASS-RECOVERY/SET_IS_SENDING\",\r\n    isSending,\r\n} as const)\r\n// thunks\r\nexport const sendInstructions = (email: string) => {\r\n    return (dispatch: Dispatch<SetSendingType>) => {\r\n        apiRecoveryPassword.getInstructions(email).then()\r\n        dispatch(setSending(true))\r\n    }\r\n}\r\nexport const sendNewPassword = (token: string, password: string) => {\r\n    return (dispatch: Dispatch<SetSendingType>) => {\r\n        apiRecoveryPassword.sendNewPassword(token, password).then();\r\n        dispatch(setSending(true));\r\n    }\r\n}\r\n// types\r\nexport type SetSendingType = ReturnType<typeof setSending>\r\nexport type SetNewPasswordType = ReturnType<typeof setNewPassword>\r\nexport type SetEmailType = ReturnType<typeof setEmail>\r\ntype ActionsType =\r\n    SetSendingType |\r\n    SetNewPasswordType |\r\n    SetEmailType\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './NewPassword.module.css'\r\nimport SuperInputText from \"../../../../main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"../../../../main/ui/common/HW4.module.css\";\r\nimport SuperButton from \"../../../../main/ui/common/c2-SuperButton/SuperButton\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../../main/bll/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useNewPasswordHandler} from \"../../../../hooks/newPasswordHandler/newPasswordHandler\";\r\nimport {PATH} from \"../../../../main/ui/routes/Routes\";\r\nimport {sendNewPassword, setNewPassword} from \"../password-recovery-reduser\";\r\n\r\n\r\nexport function NewPassword() {\r\n    const newPassword = useSelector((state: AppRootStateType) => state.passwordRecovery.newPassword)\r\n    const isSending = useSelector((state: AppRootStateType) => state.passwordRecovery.isSending)\r\n    const {token} = useParams() as { token: string; }\r\n    let navigate = useNavigate();\r\n    const {\r\n        onChange,\r\n        onClick,\r\n        newPasswordError\r\n    } = useNewPasswordHandler({\r\n        action: setNewPassword,\r\n        thunk: sendNewPassword,\r\n        newPassword,\r\n        token\r\n    })\r\n    if (isSending) {\r\n        navigate(`${PATH.LOGIN}`)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className={styles.newPassword}>\r\n                <div className={styles.newPasswordWindow}>\r\n                    <h1 className={styles.logo}>It-incubator</h1>\r\n                    <h2 className={styles.createNewPassword}>Create New Password</h2>\r\n                    <div className={styles.newPasswordWrapper}>\r\n                        <SuperInputText\r\n                            formName={'Password'}\r\n                            type={'password'}\r\n                            value={newPassword}\r\n                            onChangeText={onChange}\r\n                            onEnter={onClick}\r\n                            error={newPasswordError}\r\n                            spanClassName={s.testSpanError}\r\n                            inputStyle\r\n                        />\r\n                    </div>\r\n                    <span>Create new password and we will send you further instructions to email</span>\r\n                    <div className={styles.createNewPasswordBtn}>\r\n                        <SuperButton\r\n                            color={'blue'}\r\n                            fontColor={'white'}\r\n                            size={'big'}\r\n                            onClick={onClick}\r\n                            btn>\r\n                            Create New Password\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {useDispatch} from \"react-redux\";\r\nimport {Dispatch, useState} from \"react\";\r\nimport {SetNewPasswordType} from \"../../features/feature1-auth/Password-recovery/password-recovery-reduser\";\r\n\r\ntype ThunkType = (dispatch: Dispatch<any>) => void\r\ntype useNewPasswordHandlerType = {\r\n    action: (newPassword: string) => SetNewPasswordType,\r\n    thunk: (token: string, newPassword: string) => ThunkType,\r\n    newPassword: string\r\n    token: string\r\n}\r\nexport const useNewPasswordHandler = ({\r\n                                          action,\r\n                                          thunk,\r\n                                          newPassword,\r\n                                          token,\r\n                                      }: useNewPasswordHandlerType) => {\r\n    const [newPasswordError, setNewPasswordError] = useState<string>('');\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = (newPassword: string) => {\r\n        setNewPasswordError('');\r\n        dispatch(action(newPassword));\r\n    }\r\n    const onClick = () => {\r\n        if (!newPassword) {\r\n            setNewPasswordError('Введите пароль')\r\n        } else if (newPassword.length < 4) {\r\n            setNewPasswordError('Пароль не менее 4 символов');\r\n        }\r\n        dispatch(thunk(token, newPassword));\r\n    }\r\n    return {onChange, onClick, newPasswordError}\r\n}","import React from 'react';\r\nimport styles from './PasswordRecovery.module.css'\r\nimport SuperInputText from \"../../../main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"../../../main/ui/common/HW4.module.css\";\r\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/bll/store\";\r\nimport {sendInstructions, setEmail} from \"./password-recovery-reduser\";\r\nimport {usePasswordRecoveryHandler} from \"../../../hooks/passwordRecoveryHandler/passwordRecoveryHandler\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../../main/ui/routes/Routes\";\r\n\r\n\r\nexport function PasswordRecovery() {\r\n    const email = useSelector((state: AppRootStateType) => state.passwordRecovery.email)\r\n    const isSending = useSelector((state: AppRootStateType) => state.passwordRecovery.isSending)\r\n    let navigate = useNavigate();\r\n    const {\r\n        onChange,\r\n        onClick,\r\n        emailError\r\n    } = usePasswordRecoveryHandler({action: setEmail, thunk: sendInstructions, email});\r\n\r\n    if (isSending) {\r\n        navigate(`${PATH.CHECK_EMAIL}`)\r\n    }\r\n    const showEmail = () => {\r\n        if (emailError) {\r\n            alert('Неверный Адрес')\r\n        } else {\r\n            alert(email)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className={styles.passwordRecovery}>\r\n                <div className={styles.passwordRecoveryWindow}>\r\n                    <h1 className={styles.logo}>It-incubator</h1>\r\n                    <h2 className={styles.forgotYourPassword}>Forgot your password ?</h2>\r\n                    <div className={styles.emailWrapper}>\r\n                        <SuperInputText\r\n                            formName={'Email'}\r\n                            type={'email'}\r\n                            value={email}\r\n                            onChangeText={onChange}\r\n                            onEnter={showEmail}\r\n                            error={emailError}\r\n                            spanClassName={s.testSpanError}\r\n                            inputStyle\r\n                        />\r\n                    </div>\r\n                    <span>Enter your email address and we will send you further instructions </span>\r\n                    <div className={styles.sendInstructionsBtn}>\r\n                        <SuperButton\r\n                            color={'blue'}\r\n                            fontColor={'white'}\r\n                            size={'big'}\r\n                            btn\r\n                            onClick={onClick}\r\n                        >\r\n                            Send Instructions\r\n                        </SuperButton>\r\n                    </div>\r\n                    <span>Did you remember your password?</span>\r\n                    <div className={styles.tryLoginBtn}>\r\n                        <Link to={PATH.LOGIN}>\r\n                            <SuperButton\r\n                                fontColor={'#21268F'}\r\n                                fontSize={'big'}\r\n                                size={'small'}>\r\n                                Try logging in\r\n                            </SuperButton>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {useDispatch} from \"react-redux\";\r\nimport {Dispatch, useState} from \"react\";\r\nimport {SetEmailType} from \"../../features/feature1-auth/Password-recovery/password-recovery-reduser\";\r\n\r\n\r\ntype ThunkType = (dispatch: Dispatch<any>) => void\r\ntype usePasswordRecoveryHandlerType = {\r\n    action: (email: string) => SetEmailType,\r\n    thunk: (email: string) => ThunkType,\r\n    email: string\r\n}\r\nexport const usePasswordRecoveryHandler = ({\r\n                                               action,\r\n                                               thunk,\r\n                                               email,\r\n                                           }: usePasswordRecoveryHandlerType) => {\r\n    const [emailError, setEmailError] = useState<string>('');\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = (email: string) => {\r\n        setEmailError('');\r\n        dispatch(action(email));\r\n    }\r\n    const onClick = () => {\r\n        if (!email) {\r\n            setEmailError('Введите адрес')\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            setEmailError('Неправильный адрес');\r\n        }\r\n        dispatch(thunk(email));\r\n    }\r\n    return {onChange, onClick, emailError}\r\n}","export default __webpack_public_path__ + \"static/media/checkEmail.bc3a4042.svg\";","import React from 'react';\r\nimport styles from './CheckEmail.module.css'\r\nimport checkEmail from '../../../../main/ui/assets/img/icons/checkEmail.svg'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../main/bll/store\";\r\n\r\n\r\nexport const CheckEmail = () => {\r\n    const email = useSelector((state: AppRootStateType) => state.passwordRecovery.email)\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className={styles.checkEmail}>\r\n                <div className={styles.checkEmailWindow}>\r\n                    <h1 className={styles.logo}>It-incubator</h1>\r\n                    <div className={styles.checkEmailWrapper}>\r\n                        <div className={styles.checkEmailImg}>\r\n                            <img src={checkEmail}/>\r\n                        </div>\r\n                        <h2>Check Email</h2>\r\n                    </div>\r\n                    <span> We’ve sent an Email with instructions to {email}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport styles from './Profile.module.css'\n\n\nexport function Profile() {\n  return (\n    <div className={styles.error}>\n      Profile\n    </div>\n  );\n}\n\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n//api\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n})\r\n\r\nexport const registerAPI = {\r\n    registerUser(email: string, password: string) {\r\n        return instance.post<AxiosResponse<string>>(`auth/register`, {email, password})\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    email: '',                       //не уверен что email и password здесь нужны\r\n    password: '',\r\n    isSignUp: false,\r\n    error: '',\r\n    infoError: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'REGISTER/SET-EMAIL-PASSWORD': {\r\n            return {...state, email: action.email, password: action.password}\r\n        }\r\n        case 'REGISTER/SET-ISSIGNUP': {\r\n            return {...state, isSignUp: action.isSignUp}\r\n        }\r\n        case 'REGISTER/SET-ERROR': {\r\n            return {...state, error: action.error, infoError: action.infoError}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setEmailPasswordRegister = (email: string, password: string) => {\r\n    return {\r\n        type: 'REGISTER/SET-EMAIL-PASSWORD',\r\n        email,\r\n        password\r\n    } as const\r\n}\r\n\r\nexport const setSingUp = (isSignUp: boolean) => {\r\n    return {\r\n        type: 'REGISTER/SET-ISSIGNUP',\r\n        isSignUp\r\n    } as const\r\n\r\n}\r\n\r\nexport const setError = (error: string, infoError: string) => {\r\n    return {\r\n        type: 'REGISTER/SET-ERROR',\r\n        error,\r\n        infoError\r\n    } as const\r\n}\r\n\r\n// thunks\r\nexport const sendRegisterDataTC = (email: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        registerAPI.registerUser(email, password)\r\n            .then((res) => {\r\n                console.log({...res})\r\n                dispatch(setEmailPasswordRegister(email, password))\r\n                dispatch(setSingUp(true))\r\n            })\r\n            .catch((e) => {\r\n                console.log({...e})\r\n                const emailPasswordError = e.response.data.error\r\n                const infoSMSError = e.response.data.passwordRegExp\r\n                dispatch(setError(emailPasswordError, infoSMSError ))\r\n                console.log(emailPasswordError)\r\n                console.log(infoSMSError)\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\ntype SetEmailRegisterType = ReturnType<typeof setEmailPasswordRegister>\r\ntype SetSingUpType = ReturnType<typeof setSingUp>\r\ntype SetErrorType = ReturnType<typeof setError>\r\n\r\n\r\ntype ActionsType = SetEmailRegisterType | SetSingUpType | SetErrorType","import React, {useState} from 'react';\r\nimport styles from './Register.module.css'\r\nimport SuperInputText from \"../../../main/ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../main/ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendRegisterDataTC} from \"./register-reduser\";\r\nimport {AppRootStateType} from \"../../../main/bll/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../../main/ui/routes/Routes\";\r\n\r\n\r\nexport function Register() {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [confirmPassword, setConfirmPassword] = useState<string>('')\r\n\r\n    const emailError = email ? '' : 'email required'\r\n    const passwordError = password ? '' : 'password required'\r\n    const confirmError = confirmPassword ? '' : 'confirm password required'\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const okSignUp = useSelector<AppRootStateType, boolean>((state) => state.register.isSignUp);\r\n    const error = useSelector<AppRootStateType, string>((state) => state.register.error)\r\n    const errorInfo = useSelector<AppRootStateType, string>((state) => state.register.infoError)\r\n\r\n    const onEnterPassword = () => {\r\n        alert('подтвердите пароль!!')\r\n    }\r\n\r\n    const sendDataHandler = () => {\r\n        if (password !== confirmPassword) {\r\n            alert('неверно введен пароль подтверждения...')\r\n        } else {\r\n            dispatch(sendRegisterDataTC(email, password))\r\n        }\r\n    }\r\n\r\n    const passwordPlace = password || confirmPassword\r\n    const disabledBtn = passwordPlace === '';\r\n\r\n    if (okSignUp) {\r\n        navigate(`${PATH.LOGIN}`)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className={styles.registerWrapper}>\r\n                <div className={styles.registerWindow}>\r\n                    <h1 className={styles.logo}>It-incubator</h1>\r\n                    <h2 className={styles.signUp}>Sign Up</h2>\r\n                    <div className={styles.emailWrapper}>\r\n                        <SuperInputText\r\n                            formName={'Email'}\r\n                            type={'email'}\r\n                            value={email}\r\n                            onChangeText={setEmail}\r\n                            error={error}\r\n                            spanClassName={styles.spanError}\r\n                            inputStyle\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={styles.passwordWrapper}>\r\n                        <SuperInputText\r\n                            className={styles.password}\r\n                            formName={'Password'}\r\n                            type={'password'}\r\n                            value={password}\r\n                            onChangeText={setPassword}\r\n                            onEnter={onEnterPassword}\r\n                            error={errorInfo}\r\n                            spanClassName={styles.spanError}\r\n                            inputStyle\r\n                        />\r\n\r\n                    </div>\r\n                    <div className={styles.passwordWrapper}>\r\n                        <SuperInputText\r\n                            className={styles.password}\r\n                            formName={'Confirm password'}\r\n                            type={'password'}\r\n                            value={confirmPassword}\r\n                            onChangeText={setConfirmPassword}\r\n                            onEnter={sendDataHandler}\r\n                            error={errorInfo}\r\n                            spanClassName={styles.spanError}\r\n                            inputStyle\r\n                        />\r\n                    </div>\r\n                    <div className={styles.buttons}>\r\n                        <div className={styles.cancelBtn}>\r\n                            <SuperButton\r\n                                color={'blue'}\r\n                                fontColor={'white'}\r\n                                size={'small'}\r\n                                btn>\r\n                                Cancel\r\n                            </SuperButton>\r\n                        </div>\r\n                        <div className={styles.registerBtn}>\r\n                            <SuperButton\r\n                                color={'blue'}\r\n                                fontColor={'white'}\r\n                                size={'medium'}\r\n                                btn\r\n                                onClick={sendDataHandler}\r\n                                disabled={disabledBtn}\r\n                                >\r\n                                Register\r\n                            </SuperButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport {Route, Routes} from \"react-router-dom\";\r\n\r\nimport {Error404} from \"../../../features/feature1-auth/Error404/Error404\";\r\nimport { Login } from '../../../features/feature1-auth/Login/Login';\r\nimport {SuperComponents} from \"../common/HW4\";\r\nimport {NewPassword} from \"../../../features/feature1-auth/Password-recovery/new-password/NewPassword\";\r\nimport {PasswordRecovery} from \"../../../features/feature1-auth/Password-recovery/PasswordRecovery\";\r\nimport {CheckEmail} from \"../../../features/feature1-auth/Password-recovery/check-email/CheckEmail\";\r\nimport {Profile} from \"../../../features/feature1-auth/Profile/Profile\";\r\nimport {Register} from \"../../../features/feature1-auth/Register/Register\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/Login',\r\n    NEW_PASSWORD: '/New-password/:token',\r\n    PASSWORD_RECOVERY: '/Password-recovery',\r\n    CHECK_EMAIL: '/Check-email',\r\n    PROFILE: '/Profile',\r\n    REGISTER: '/Register',\r\n    SUPER_COMPONENTS: '/super-components',\r\n    ERROR: '/error404',\r\n}\r\n\r\nexport function Rout() {\r\n    return (\r\n        <div className={'Routes'}>\r\n            <Routes>\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} element={<NewPassword/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} element={<PasswordRecovery/>}/>\r\n                <Route path={PATH.CHECK_EMAIL} element={<CheckEmail/>}/>\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n                <Route path={PATH.REGISTER} element={<Register/>}/>\r\n                <Route path={PATH.SUPER_COMPONENTS} element={<SuperComponents/>}/>\r\n                <Route path={PATH.ERROR} element={<Error404/>}/>\r\n                <Route path={'*'} element={<Error404/>}/>\r\n            </Routes>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from \"../routes/Routes\";\r\nimport {setStatusAuthUser} from \"../../../features/feature1-auth/Login/login-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport function Header() {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className={styles.header}>\r\n            <div className='container'>\r\n                <ul className={styles.list}>\r\n                    <li className={styles.item}>\r\n                        <NavLink to={PATH.LOGIN}><h1 className={styles.logo}>It-incubator</h1></NavLink>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <NavLink to={PATH.LOGIN}\r\n                                 onClick={() => (dispatch(setStatusAuthUser('idle')))}>LOGIN</NavLink>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <NavLink to={PATH.NEW_PASSWORD}>NEW PASSWORD</NavLink>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <NavLink to={PATH.PASSWORD_RECOVERY}>PASSWORD RECOVERY</NavLink>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <NavLink to={PATH.PROFILE}>PROFILE</NavLink>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <NavLink to={PATH.REGISTER}>REGISTER</NavLink>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <NavLink to={PATH.SUPER_COMPONENTS}>SUPER COMPONENTS</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./header/Header\";\nimport {Rout} from \"./routes/Routes\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Rout/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    return state\r\n}\r\n\r\n// thunks\r\n\r\n// types\r\ntype ActionsType = any","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {loginReducer} from \"../../features/feature1-auth/Login/login-reduser\";\r\nimport {registerReducer} from \"../../features/feature1-auth/Register/register-reduser\";\r\nimport {passwordRecoveryReducer} from \"../../features/feature1-auth/Password-recovery/password-recovery-reduser\";\r\nimport {profileReducer} from \"../../features/feature1-auth/Profile/profile-reduser\";\r\n\r\nconst rootReducer = combineReducers({\r\n    login:loginReducer,\r\n    register: registerReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/bll/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerWrapper\":\"Register_registerWrapper__2kznv\",\"registerWindow\":\"Register_registerWindow__uhgi8\",\"logo\":\"Register_logo__20yTx\",\"signUp\":\"Register_signUp__1Yz88\",\"emailWrapper\":\"Register_emailWrapper__3MixR\",\"passwordWrapper\":\"Register_passwordWrapper__1NeIs\",\"spanError\":\"Register_spanError__1GR74\",\"buttons\":\"Register_buttons__3Qv8d\",\"cancelBtn\":\"Register_cancelBtn__3Yuxg\",\"registerBtn\":\"Register_registerBtn__25Cs8\"};"],"sourceRoot":""}